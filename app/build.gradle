apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.pratamawijaya.basekotlin"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.compileSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        File secretsExists = new File("secrets.properties")
        if (secretsExists.exists()) {
            def secretsFile = rootProject.file('secrets.properties')
            def secrets = new Properties()
            secrets.load(new FileInputStream(secretsFile))
            buildConfigField "String", "API_URL", secrets.getProperty('API_URL')
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }
    dataBinding.enabled true

    // for android studio 3, need flavorDimension
    // see : https://developer.android.com/studio/build/gradle-plugin-3-0-0-migration.html?utm_source=android-studio#variant_aware
    flavorDimensions 'stage'

    productFlavors {
        development {
            dimension 'stage'
            versionNameSuffix 'dev'
        }
        production {
            dimension 'stage'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

detekt {
    version = "1.0.0.RC6-3"
    profile("main") {
        input = "$projectDir/src/main/kotlin"
        config = "$rootDir/detekt.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.1.1'
            }
        } else if (requested.group == "com.google.android.gms") {
            details.useVersion '11.8.0'
        } else if (requested.group == "com.google.firebase") {
            details.useVersion '11.8.0'
        }

    }
}

apply from: 'dependencies.gradle'

// see dependencies.gradle for setup library
dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    compile fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation unitTestLibs
    androidTestImplementation androidTestsLibs

    implementation supportLibs
    implementation networkLibs
    implementation rxJavaLibs
    implementation daggerLibs

    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'

    implementation 'com.xwray:groupie:2.0.3'
    implementation 'com.xwray:groupie-kotlin-android-extensions:2.0.3'
    implementation 'com.xwray:groupie-databinding:2.0.3'

    implementation timberLibs
    implementation butterKnifeLibs
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    implementation dimensionLibs

    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.github.nitrico.lastadapter:lastadapter:2.2.2'

    kapt 'com.android.databinding:compiler:3.1.3'
    kapt "com.google.dagger:dagger-compiler:2.11"
    kapt 'com.google.dagger:dagger-android-processor:2.11'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
}

repositories {
    mavenCentral()
}

apply plugin: 'kotlin-android-extensions'